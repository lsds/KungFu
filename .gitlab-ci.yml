# https://docs.gitlab.com/ce/ci/yaml/README.html


stages:
- test
- lint

.tensorflow:
  stage: test
  image: python:3.6
  variables:
    KUNGFU_DOWNLOAD_GO: 'ON'

  before_script:
  - pip3 install --upgrade pip
  - pip3 install cmake numpy==1.16 tensorflow==${TF_VERSION}
  - pip3 --version
  - python3 --version
  - python3 -c "import tensorflow as tf; print(tf.__version__)"

  only:
    changes:
    - srcs/**/*

.tensorflow1:
  extends: .tensorflow

  script:
  - pip3 install --no-index -U .
  - python3 -m kungfu.tensorflow.v1.examples

.tensorflow2:
  extends: .tensorflow

  script:
  - pip3 install --no-index -U .
  - python3 -m kungfu.tensorflow.v2.examples

tensorflow 1.12.3:
  extends: .tensorflow1
  variables:
    TF_VERSION: '1.12.3'

tensorflow 1.13.2:
  extends: .tensorflow1
  variables:
    TF_VERSION: '1.13.2'

# FIXME: Segmentation fault      (core dumped)
# tensorflow 1.14.0:
#   extends: .tensorflow1
#   variables:
#     TF_VERSION: '1.14.0'

tensorflow 1.15.0:
  extends: .tensorflow1
  variables:
    TF_VERSION: '1.15.0'

tensorflow 2.0.0:
  extends: .tensorflow2
  variables:
    TF_VERSION: '2.0.0'

TF1 python3 test:
  stage: test
  image: registry.gitlab.com/lsds-kungfu/image/builder:ubuntu18

  before_script:
  - |
    DATA_DIR=$HOME/var/data \
    ./scripts/download-mnist.sh

  - python3 -c "import tensorflow as tf; print(tf.__version__)"
  - pip3 install tensorflow==1.13.2 # FIXME: upgrade TF in the image
  - python3 -c "import tensorflow as tf; print(tf.__version__)"

  script:
  - cmake --version
  - pip3 install --no-index -U .
  - GOBIN=$PWD/bin go install -v ./srcs/go/cmd/kungfu-run

  only:
    changes:
    - srcs/**/*
    - tests/**/*

TF2 python3 test:
  extends: .tensorflow2
  variables:
    TF_VERSION: '2.0.0'
    KUNGFU_BUILD_TOOLS: 'ON'

  script:
  - pip3 install --no-index -U .
  - kungfu-run -H 127.0.0.1:1 -np 1 python3 -m kungfu.tensorflow.v2.examples
  - kungfu-run -H 127.0.0.1:2 -np 2 python3 -m kungfu.tensorflow.v2.examples
  - kungfu-run -H 127.0.0.1:3 -np 3 python3 -m kungfu.tensorflow.v2.examples
  - kungfu-run -H 127.0.0.1:4 -np 4 python3 -m kungfu.tensorflow.v2.examples

  - kungfu-run -H 127.0.0.1:4 -np 4 python3 tests/python/test_optimizers_tf2.py

  only:
    changes:
    - srcs/**/*
    - tests/**/*

go format test:
  stage: lint
  image: alpine:3.9

  before_script:
  - apk update
  - apk add git go

  script:
  - gofmt -w .
  - git diff --exit-code

  only:
    changes:
    - srcs/**/*.go

python format test:
  stage: lint
  # image: alpine:3.9
  image: ubuntu:bionic

  before_script:
  #- apk update
  #- apk add git python3
  - apt update
  - apt install -y git python3-pip
  - pip3 install -U -r tests/lint.requirements.txt

  script:
  - ./scripts/clean-code.sh --fmt-py
  - git diff --exit-code

  only:
    changes:
    - srcs/**/*.py

clang format test:
  stage: lint
  image: registry.gitlab.com/lsds-kungfu/image/builder:ubuntu18
  # TODO: use newer ubuntu image
  # image: ubuntu:disco

  before_script:
  - apt install -y clang-format

  script:
  - clang-format -version
  - ./scripts/clean-code.sh --fmt-cpp
  - git diff --exit-code

  only:
    changes:
    - srcs/**/*.h
    - srcs/**/*.hpp
    - srcs/**/*.cpp

clang tidy:
  stage: lint
  image: registry.gitlab.com/lsds-kungfu/image/builder:ubuntu18
  # TODO: use newer ubuntu image
  # image: ubuntu:disco

  before_script:
  - apt update
  - apt install -y clang clang-format clang-tidy jq

  script:
  - clang-format -version
  - clang-tidy -version
  - ./scripts/clean-code.sh --check
  # - git diff

  only:
    changes:
    - srcs/**/*.h
    - srcs/**/*.hpp
    - srcs/**/*.cpp
